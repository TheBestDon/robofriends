{"version":3,"sources":["reducer.js","components/Card.js","components/CardList.js","components/CounterButton.js","components/ErrorBoundry.js","components/Header.js","components/Scroll.js","components/SearchBox.js","containers/App.js","actions.js","constants.js","serviceWorker.js","index.js"],"names":["initialState","searchField","initialStateRobots","isLoading","robots","error","Card","_ref","id","name","username","email","react_default","a","createElement","className","src","concat","alt","CardList","map","robot","components_Card","key","CounterButton","state","count","updateCount","_this","setState","nextProps","color","this","props","onClick","PureComponent","ErrorBoundry","hasError","info","children","Component","Header","Scroll","style","overflowY","border","height","SearchBox","searchChange","type","placeholder","onChange","aria-label","App","onRequestRobots","_this$props","onSearchChange","filteredRobots","filter","toLowerCase","includes","components_Header","components_CounterButton","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","json","users","catch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","Object","objectSpread","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42254cfa.chunk.js","sourcesContent":["import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants'\n\nconst initialState = {\n  searchField: ''\n}\n\nexport const searchRobots = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return {\n        ...state,\n        searchField: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nconst initialStateRobots = {\n  isLoading: false,\n  robots: [],\n  error: ''\n}\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return {\n        ...state,\n        isLoading: true\n      }\n    case REQUEST_ROBOTS_SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        robots: action.payload\n      }\n    case REQUEST_ROBOTS_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload\n      }\n    default:\n      return state;\n  }\n}","import React from 'react'\n\nconst Card = ({id, name, username, email}) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n      <img src={`https://robohash.org/${name}?200x200`} alt=\"robots\"/>\n      <div>\n        <h2>{name}</h2>\n        <h3>{username}</h3>\n        <p>{email}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card'\n\nconst CardList = ({robots}) => {\n\n  return (\n    <div>\n      { robots.map(robot => {\n         const {id, name, username, email} = robot\n         return <Card key={id} id={id} name={name} username={username} email={email}/>\n       })}\n    </div>\n  )\n}\n\nexport default CardList\n","import React, { PureComponent } from 'react'\n\nclass CounterButton extends PureComponent {\n  state = {\n    count: 0\n  }\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   if(this.state.count !== nextState.count){\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  updateCount = () => {\n    this.setState((state, nextProps) => {\n     return { count: state.count + 1}\n    })\n  }\n\n  render() {\n    return (\n      <button color={this.props.color} onClick={this.updateCount}>Count: {this.state.count}</button>\n    )\n  }\n}\n\nexport default CounterButton\n","import React, { Component } from 'react'\n\nclass ErrorBoundry extends Component {\n  state = {\n    hasError: false\n  }\n  componentDidCatch(error, info ) {\n    this.setState({\n      hasError: true\n    })\n  }\n  render () {\n   if(this.state.hasError) {\n     return <h1>OOOOps. This not good</h1>\n   }\n   return this.props.children\n  }\n}\n\nexport default ErrorBoundry","import React, { Component } from 'react'\n\nclass Header extends Component {\n  // shouldComponentUpdate (nextProps, nextState) {\n  //   return false;\n  // }\n\n  render() {\n    return (\n      <h1 className=\"f1\">Robofriends</h1>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\n\nconst Scroll = ({children}) => {\n  return (\n    <div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n      {children}\n    </div>\n  )\n}\n\nexport default Scroll\n","import React from 'react'\n\nconst SearchBox = ({searchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input type=\"search\" placeholder=\"Search robots\" name=\"search\" id=\"search_box\" className=\"pa3 ba b--green bg-lightest-blue\" onChange={searchChange} aria-label=\"search box\"/>\n    </div>\n  )\n}\n\nexport default SearchBox\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {CardList, SearchBox, Scroll, ErrorBoundry, Header, CounterButton } from '../components'\nimport 'tachyons'\nimport './App.css'\nimport { setSearchField, requestRobots } from '../actions';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onRequestRobots()\n  }\n\n  render () {\n    const { searchField, onSearchChange, robots, isLoading, error } = this.props\n    const filteredRobots = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n    return isLoading ? <h1>Loading...</h1>\n    : (\n        <div className=\"tc\">\n            <Header />\n            <CounterButton color=\"red\"/>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n            <ErrorBoundry>\n           <CardList robots={filteredRobots} />\n           </ErrorBoundry>\n           </Scroll>\n        </div>\n      );\n    }\n  }\n\n  const mapStateToProps = state => {\n    return {\n      searchField: state.searchRobots.searchField,\n      robots: state.requestRobots.robots,\n      isLoading: state.requestRobots.isLoading,\n      error: state.requestRobots.error\n    }\n  }\n  const mapDispatchToProps = dispatch => {\n    return {\n      onSearchChange: event => dispatch(setSearchField(event.target.value)),\n      onRequestRobots: () => dispatch(requestRobots())\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAILED } from './constants'\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text\n})\nexport const requestRobots = () => dispatch => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(robots => robots.json())\n    .then(users => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: users }))\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }))\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD'\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING'\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS'\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED'","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport { searchRobots, requestRobots } from './reducer'\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({searchRobots, requestRobots})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}